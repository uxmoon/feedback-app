/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

:root {
  --color-white: #ffffff;
  --color-black: #121212;
  --color-black-2: #252525;
  --color-primary: #0d6efd;
}

body {
  background-color: #121212;
  color: #fff;
  font-family: sans-serif;
}

ul {
  list-style: none;
  padding: 0;
}

.card {
  position: relative;
  background-color: var(--color-white);
  padding: 1rem;
  border-radius: 0.5rem;
  margin-bottom: 1.5rem;
  color: var(--color-black);
  padding: 40px 50px;
}

.card.reverse {
  background-color: var(--color-black-2);
  color: var(--color-white);
}

.feedback-rating {
  position: absolute;
  top: -1rem;
  left: -1rem;
  width: 2rem;
  height: 2rem;
  border-radius: 1000px;
  background-color: var(--color-black-2);
  color: var(--color-white);
  border: 1px solid var(--color-white);
  text-align: center;
  line-height: 2rem;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

button[type='submit']:disabled,
button[type='button']:disabled {
  cursor: not-allowed;
}

.container {
  max-width: 65rem;
  margin-left: auto;
  margin-right: auto;
  padding: 0 1rem;
}

form h2 {
  text-align: center;
  margin-bottom: 0.75rem;
}

.input-group {
  border: 1px solid var(--color-black-2);
  border-radius: 0.25rem;
  padding: 0.25rem;
  display: flex;
}

form input[type='text'] {
  appearance: none;
  border: none;
  width: 100%;
}

.btn {
  color: var(--color-white);
  background-color: var(--color-black-2);
  cursor: pointer;
  border: 0;
  border-radius: 0.5rem;
  width: 100px;
  height: 40px;
  appearance: none;
}

.btn:disabled {
  background-color: #ccc;
  color: #808080;
}

.btn-primary {
  background-color: #202142;
}

.btn:hover {
  transform: scale(0.98);
  opacity: 0.9;
}

.rating {
  display: flex;
  align-items: center;
  justify-content: space-around;
  flex-wrap: wrap;
  row-gap: 0.5rem;
  margin: 30px 0 40px;
}

.rating li,
.rating-number {
  position: relative;
  background: #f4f4f4;
  width: 50px;
  height: 50px;
  padding: 10px;
  text-align: center;
  border-radius: 50%;
  font-size: 19px;
  border: 1px #eee solid;
  transition: 0.3s;
}

.rating li label {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 50px;
  height: 50px;
  padding: 10px;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  cursor: pointer;
}

.rating li:hover,
.rating-number {
  background: #ff6a95;
  color: #fff;
}

[type='radio'] {
  opacity: 0;
}

[type='radio']:checked ~ label {
  background: #ff6a95;
  color: #fff;
}

.rating-number {
  position: absolute;
  top: -10px;
  left: -10px;
}

.close {
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;
  background: none;
  border: none;
}

.feedback-stats {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}

.spinner {
  display: flex;
  height: 8rem;
  width: 8rem;
  border: solid 3px var(--color-primary);
  border-radius: 50%;
  border-bottom-color: transparent;
  border-right-color: transparent;
  will-change: transform;
  animation: spin 500ms infinite linear;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
